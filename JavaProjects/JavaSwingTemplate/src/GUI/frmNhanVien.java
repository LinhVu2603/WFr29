/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import OBJ.NhanVien;
import Utils.ValidateData;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Linh
 */
public class frmNhanVien extends javax.swing.JPanel {

    /**
     * Creates new form frmNhanVien
     */
    private DefaultTableModel defaultTableModel;
    NhanVien nv = new NhanVien();
    ArrayList<NhanVien> listNV = new ArrayList<>();
    ValidateData validate = new ValidateData();

    public frmNhanVien() {
        initComponents();
        loadFile();
        getData(listNV);

    }

    public void loadFile() {
        try {
            BufferedReader br = null;
            FileReader fr = null;
            listNV = new ArrayList<>(); //lưu ý
            fr = new FileReader("nhanvien.txt");
            br = new BufferedReader(fr);
            String s = null;

            try {
                while ((s = br.readLine()) != null) {
                    //Cắt chuỗi:
                    String arr[] = s.split("\t");
                    //Khởi tạo
                    NhanVien nv = new NhanVien();
                    nv.setMaNhanVien(arr[0]);
                    nv.setHoTen(arr[1]);
                    nv.setSoDienThoai(arr[2]);
                    nv.setEmail(arr[3]);
                    nv.setMatKhau(arr[4]);
                    nv.setNhom(Integer.parseInt(arr[5]));
                    nv.setGioiTinh(arr[6]);
                    nv.setTrangThai(Integer.parseInt(arr[7]));
                    listNV.add(nv);
                }
            } catch (IOException ex) {
                Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void saveFile() {

        try {
            BufferedWriter bw = null; //Khởi tạo
            FileWriter fw = null; //Khởi tạo
            String data = ""; //Tạo một string data bằng rỗng.
            for (int i = 0; i < listNV.size(); i++) {
                String row = ""; //tạo hàng rỗng
                row = row + listNV.get(i).getMaNhanVien() + "\t";
                row = row + listNV.get(i).getHoTen() + "\t";
                row = row + listNV.get(i).getSoDienThoai() + "\t";
                row = row + listNV.get(i).getEmail() + "\t";
                row = row + listNV.get(i).getMatKhau() + "\t";
                row = row + listNV.get(i).getNhom() + "\t";
                row = row + listNV.get(i).getGioiTinh() + "\t";
                row = row + listNV.get(i).getTrangThai() + "\n";
                data += row;
            }
            fw = new FileWriter("nhanvien.txt");
            bw = new BufferedWriter(fw);
            bw.write(data);
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(frmNhanVienTemplate.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void getData(ArrayList<NhanVien> listNV) {
        defaultTableModel = new DefaultTableModel();
        defaultTableModel.addColumn("Mã NV");
        defaultTableModel.addColumn("Họ tên NV");
        defaultTableModel.addColumn("Giới tính");
        defaultTableModel.addColumn("Email");
        defaultTableModel.addColumn("SĐT");
        defaultTableModel.addColumn("Nhóm");
        defaultTableModel.addColumn("Trạng Thái");

        for (NhanVien obj : listNV) {
            Vector vector = new Vector();
            vector.add(obj.getMaNhanVien());
            vector.add(obj.getHoTen());
            vector.add(obj.getGioiTinh());
            vector.add(obj.getEmail());
            vector.add(obj.getSoDienThoai());
            vector.add(obj.getNhom() == 1 ? "Quản lý" : "Nhân viên");
            vector.add(obj.getTrangThai() == 1 ? "Hoạt động" : "Đã khóa");
            defaultTableModel.addRow(vector);
        }
        tbl_nhanVien.setModel(defaultTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_nhanVien = new javax.swing.JTable();
        btn_them = new javax.swing.JButton();
        btn_sua = new javax.swing.JButton();
        btn_xoa = new javax.swing.JButton();
        btn_thoat = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txt_timKiem = new javax.swing.JTextField();
        btn_timKiem = new javax.swing.JButton();
        pnl_thongTinKH = new javax.swing.JPanel();
        lb_maNV = new java.awt.Label();
        lb_email = new javax.swing.JLabel();
        lb_sdt = new javax.swing.JLabel();
        lb_nhom = new javax.swing.JLabel();
        lb_hoTen = new javax.swing.JLabel();
        lb_gioiTinh = new javax.swing.JLabel();
        lb_trangThai = new javax.swing.JLabel();
        txt_Sdt = new javax.swing.JTextField();
        txt_MaNV = new javax.swing.JTextField();
        txt_Email = new javax.swing.JTextField();
        txt_ten = new javax.swing.JTextField();
        txt_gioiTinh = new javax.swing.JComboBox<>();
        txt_trangThai = new javax.swing.JComboBox<>();
        txt_nhom = new javax.swing.JComboBox<>();
        lb_email1 = new javax.swing.JLabel();
        txt_matKhau = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Zent Coding School");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("THỐNG KÊ BÁN HÀNG");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(116, 116, 116))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setLayout(null);

        tbl_nhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_nhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_nhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_nhanVien);

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 321, 877, 206);

        btn_them.setText("Thêm");
        btn_them.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btn_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themActionPerformed(evt);
            }
        });
        add(btn_them);
        btn_them.setBounds(508, 185, 75, 31);

        btn_sua.setText("Sửa");
        btn_sua.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btn_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaActionPerformed(evt);
            }
        });
        add(btn_sua);
        btn_sua.setBounds(508, 223, 75, 31);

        btn_xoa.setText("Xóa");
        btn_xoa.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btn_xoa.setPreferredSize(new java.awt.Dimension(65, 25));
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });
        add(btn_xoa);
        btn_xoa.setBounds(648, 185, 75, 31);

        btn_thoat.setText("Thoát");
        btn_thoat.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        add(btn_thoat);
        btn_thoat.setBounds(648, 223, 75, 31);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("TÌM KIẾM"));

        btn_timKiem.setText("Tìm Kiếm");
        btn_timKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        btn_timKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(txt_timKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_timKiem))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_timKiem)
                    .addComponent(btn_timKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel2);
        jPanel2.setBounds(480, 80, 342, 76);

        pnl_thongTinKH.setBorder(javax.swing.BorderFactory.createTitledBorder("THÔNG TIN NHÂN VIÊN"));

        lb_maNV.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lb_maNV.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lb_maNV.setText("Mã Nhân Viên");

        lb_email.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lb_email.setText("Email");

        lb_sdt.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lb_sdt.setText("SĐT");

        lb_nhom.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lb_nhom.setText("Nhóm");

        lb_hoTen.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lb_hoTen.setText("Họ và Tên");

        lb_gioiTinh.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lb_gioiTinh.setText("Giới tính");

        lb_trangThai.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lb_trangThai.setText("Trạng thái");

        txt_Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_EmailActionPerformed(evt);
            }
        });

        txt_ten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_tenActionPerformed(evt);
            }
        });

        txt_gioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác", " " }));
        txt_gioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_gioiTinhActionPerformed(evt);
            }
        });

        txt_trangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Deactiv" }));

        txt_nhom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý", "Nhân viên", " " }));
        txt_nhom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nhomActionPerformed(evt);
            }
        });

        lb_email1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lb_email1.setText("Mật khẩu");

        javax.swing.GroupLayout pnl_thongTinKHLayout = new javax.swing.GroupLayout(pnl_thongTinKH);
        pnl_thongTinKH.setLayout(pnl_thongTinKHLayout);
        pnl_thongTinKHLayout.setHorizontalGroup(
            pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                            .addComponent(lb_nhom)
                            .addGap(55, 55, 55))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_thongTinKHLayout.createSequentialGroup()
                            .addComponent(lb_maNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                        .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_email)
                            .addComponent(lb_sdt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                        .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Sdt)
                            .addComponent(txt_nhom, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27))
                    .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                        .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Email, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)))
                .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb_email1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_hoTen, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lb_gioiTinh)
                    .addComponent(lb_trangThai))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_matKhau)
                    .addComponent(txt_ten)
                    .addComponent(txt_gioiTinh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_trangThai, 0, 104, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        pnl_thongTinKHLayout.setVerticalGroup(
            pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lb_hoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_ten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                                .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lb_maNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lb_email1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_matKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4))
                    .addGroup(pnl_thongTinKHLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(lb_email)
                        .addGap(18, 18, 18)
                        .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Sdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_sdt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_gioiTinh)
                            .addComponent(txt_gioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnl_thongTinKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_nhom)
                            .addComponent(txt_nhom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_trangThai)
                            .addComponent(txt_trangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        add(pnl_thongTinKH);
        pnl_thongTinKH.setBounds(12, 80, 461, 210);

        jPanel3.setBackground(new java.awt.Color(0, 153, 255));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Lima Fruits");
        jLabel3.setToolTipText("");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("QUẢN LÝ NHÂN VIÊN");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(116, 116, 116))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jLabel3)))
        );

        add(jPanel3);
        jPanel3.setBounds(0, 0, 877, 53);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tt47.jpg"))); // NOI18N
        add(jLabel6);
        jLabel6.setBounds(-9, 36, 890, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaActionPerformed
        String sdt = txt_Sdt.getText();
        if (sdt.length() == 0) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được trống!");
        } else {
            if ((sdt.length() != 10) && (sdt.charAt(0) != 0)) {
                JOptionPane.showMessageDialog(this, "Số điện thoại sai định dạng!");
                return;
            }
            String email = txt_Email.getText();
            if (!kiemTraEmail(email)) {
                JOptionPane.showMessageDialog(this, "Email sai định dạng!");
                return;
            }
            String hoTen = txt_ten.getText();
            if (hoTen.equals("")) {
                JOptionPane.showMessageDialog(this, "Họ tên không được để trống!");
                return;
            }
            String matKhau = txt_matKhau.getText();
            String gioiTinh = "Nam";
            if (txt_gioiTinh.getSelectedItem().equals("Nữ")) {
                gioiTinh = "Nữ";
            } else if (txt_gioiTinh.getSelectedItem().equals("Khác")) {
                gioiTinh = "Khác";
            }
            int trangThai = 0;
            if (txt_trangThai.getSelectedItem().equals("Active")) {
                trangThai = 1;
            }
            int nhom = 0;
            if (txt_nhom.getSelectedItem().equals("Quản lý")) {
                nhom = 1;
            }
            //Cập nhật nhân viên mới
            nv.setHoTen(hoTen);
            nv.setEmail(email);
            nv.setSoDienThoai(sdt);
            nv.setGioiTinh(gioiTinh);
            nv.setTrangThai(trangThai);
            nv.setNhom(nhom);
            //Set Arraylist
            listNV.set(index, nv);
            //Lưu file
            saveFile();
            //Cập nhật table
            getData(listNV);
            JOptionPane.showMessageDialog(this, "Chỉnh sửa nhân viên " + nv.getMaNhanVien() + " thành công!");
            //Reset form
            reset();
        }
    }//GEN-LAST:event_btn_suaActionPerformed

    private void txt_EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_EmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_EmailActionPerformed

    private void txt_tenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_tenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tenActionPerformed

    private void txt_gioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_gioiTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_gioiTinhActionPerformed

    private void txt_nhomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nhomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nhomActionPerformed

    private void btn_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themActionPerformed
        String maNV = txt_MaNV.getText();
        if (maNV.equals("")) {
            JOptionPane.showMessageDialog(this, "Mã nhân viên không được để trống!");
            return;
        }
        String hoTen = txt_ten.getText();
        if (hoTen.equals("")) {
            JOptionPane.showMessageDialog(this, "Họ tên không được để trống!");
            return;
        }
        String matKhau = txt_matKhau.getText();
        if (matKhau.equals("")) {
            JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống!");
            return;
        }
        String sdt = txt_Sdt.getText();
        if (sdt.length() == 0) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được trống!");
        }
        if ((sdt.length() != 10) && (sdt.charAt(0) != 0)) {
            JOptionPane.showMessageDialog(this, "Số điện thoại sai định dạng!");
            return;
        }
        String email = txt_Email.getText();
        if (!kiemTraEmail(email)) {
            JOptionPane.showMessageDialog(this, "Email sai định dạng!");
            return;
        }

        String gioiTinh = "Nam";
        if (txt_gioiTinh.getSelectedItem().equals("Nữ")) {
            gioiTinh = "Nữ";
        } else if (txt_gioiTinh.getSelectedItem().equals("Khác")) {
            gioiTinh = "Khác";
        }
        int trangThai = 0;
        if (txt_trangThai.getSelectedItem().equals("Active")) {
            trangThai = 1;
        }
        int nhom = 0;
        if (txt_nhom.getSelectedItem().equals("Quản lý")) {
            nhom = 1;
        }

        // Tạo đối tượng nhân viên
        NhanVien nv = new NhanVien();
        nv.setMaNhanVien(maNV);
        nv.setHoTen(hoTen);
        nv.setMatKhau(validate.md5(matKhau));
        nv.setSoDienThoai(sdt);
        nv.setEmail(email);
        nv.setGioiTinh(gioiTinh);
        nv.setTrangThai(trangThai);
        nv.setNhom(nhom);
        //Add nv vào listNV
        listNV.add(nv);
        //SaveFile
        saveFile();
        // Đổ dữ liệu lên bảng
        getData(listNV);
        JOptionPane.showMessageDialog(this, "Thêm thông tin thành công!");
        //Reset lại các ô nhập thông tin
        reset();
    }//GEN-LAST:event_btn_themActionPerformed

    public boolean kiemTraEmail(String email) {
        String dinhDangEmail = "^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        boolean ktEmail = email.matches(dinhDangEmail);
        return ktEmail;
    }

    private void btn_timKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timKiemActionPerformed
        String tuKhoa = txt_timKiem.getText();
        if (tuKhoa.equals("")) {
            getData(listNV);
        } else {
            ArrayList<NhanVien> listNV_Search = new ArrayList<>();
            for (int i = 0; i < listNV.size(); i++) {
                if ((listNV.get(i).getHoTen().contains(tuKhoa)) || (listNV.get(i).getEmail().contains(tuKhoa)) || (listNV.get(i).getMaNhanVien().contains(tuKhoa))) {
                    listNV_Search.add(listNV.get(i));
                }
            }

            getData(listNV_Search);
            if (listNV_Search.size() == 0) {
                JOptionPane.showMessageDialog(this, "Nhân viên cần tìm không tồn tại!");
                reset();
                getData(listNV);
            }
        }

    }//GEN-LAST:event_btn_timKiemActionPerformed

    int index;
    private void tbl_nhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_nhanVienMouseClicked
        btn_sua.setEnabled(true);
        btn_xoa.setEnabled(true);
        // Lay ra ban ghi
        int row = tbl_nhanVien.getSelectedRow();
        String maNV = tbl_nhanVien.getValueAt(row, 0).toString();
        for (int i = 0; i < listNV.size(); i++) {
            if (maNV.equals(listNV.get(i).getMaNhanVien())) {
                nv = listNV.get(i);
                index = i;
                break;
            }
        }

        txt_MaNV.setEnabled(false);
        txt_matKhau.setEnabled(false);
        btn_them.setEnabled(false);

        txt_MaNV.setText(nv.getMaNhanVien());
        txt_Email.setText(nv.getEmail());
        txt_Sdt.setText(nv.getSoDienThoai());
        txt_matKhau.setText(nv.getMatKhau());
        txt_ten.setText(nv.getHoTen());

        if (nv.getGioiTinh().equals("Nam")) {
            txt_gioiTinh.setSelectedItem("Nam");
        } else if (nv.getGioiTinh().equals("Nữ")) {
            txt_gioiTinh.setSelectedItem("Nữ");
        } else {
            txt_gioiTinh.setSelectedItem("Khác");
        }
        if (nv.getNhom() == 1) {
            txt_nhom.setSelectedItem("Quản lý");
        } else {
            txt_nhom.setSelectedItem("Nhân viên");
        }
        if (nv.getTrangThai() == 1) {
            txt_trangThai.setSelectedItem("Active");
        } else {
            txt_trangThai.setSelectedItem("Deactive");
        }
    }//GEN-LAST:event_tbl_nhanVienMouseClicked

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed
        Integer confirm = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa nhân viên " + nv.getMaNhanVien() + " không?", "Xóa nhân viên", 2);
        if (confirm == JOptionPane.YES_OPTION) {
            if (listNV.remove(nv) == true) {
                saveFile();
                getData(listNV);
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại!");
            }
        }
    }//GEN-LAST:event_btn_xoaActionPerformed

    public void reset() {
        txt_MaNV.setText("");
        txt_ten.setText("");
        txt_matKhau.setText("");
        txt_Sdt.setText("");
        txt_Email.setText("");
        txt_timKiem.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_sua;
    private javax.swing.JButton btn_them;
    private javax.swing.JButton btn_thoat;
    private javax.swing.JButton btn_timKiem;
    private javax.swing.JButton btn_xoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_email;
    private javax.swing.JLabel lb_email1;
    private javax.swing.JLabel lb_gioiTinh;
    private javax.swing.JLabel lb_hoTen;
    private java.awt.Label lb_maNV;
    private javax.swing.JLabel lb_nhom;
    private javax.swing.JLabel lb_sdt;
    private javax.swing.JLabel lb_trangThai;
    private javax.swing.JPanel pnl_thongTinKH;
    private javax.swing.JTable tbl_nhanVien;
    private javax.swing.JTextField txt_Email;
    private javax.swing.JTextField txt_MaNV;
    private javax.swing.JTextField txt_Sdt;
    private javax.swing.JComboBox<String> txt_gioiTinh;
    private javax.swing.JPasswordField txt_matKhau;
    private javax.swing.JComboBox<String> txt_nhom;
    private javax.swing.JTextField txt_ten;
    private javax.swing.JTextField txt_timKiem;
    private javax.swing.JComboBox<String> txt_trangThai;
    // End of variables declaration//GEN-END:variables
}
